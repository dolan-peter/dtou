// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// c_dtou
List c_dtou(std::vector<std::string> RString);
RcppExport SEXP _dtou_c_dtou(SEXP RStringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type RString(RStringSEXP);
    rcpp_result_gen = Rcpp::wrap(c_dtou(RString));
    return rcpp_result_gen;
END_RCPP
}
// c_limiteddtou
List c_limiteddtou(std::vector<std::string> RString, long depth);
RcppExport SEXP _dtou_c_limiteddtou(SEXP RStringSEXP, SEXP depthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type RString(RStringSEXP);
    Rcpp::traits::input_parameter< long >::type depth(depthSEXP);
    rcpp_result_gen = Rcpp::wrap(c_limiteddtou(RString, depth));
    return rcpp_result_gen;
END_RCPP
}
// c_dtouC
List c_dtouC(std::vector<std::string> RString);
RcppExport SEXP _dtou_c_dtouC(SEXP RStringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type RString(RStringSEXP);
    rcpp_result_gen = Rcpp::wrap(c_dtouC(RString));
    return rcpp_result_gen;
END_RCPP
}
// c_limiteddtouC
List c_limiteddtouC(std::vector<std::string> RString, long depth);
RcppExport SEXP _dtou_c_limiteddtouC(SEXP RStringSEXP, SEXP depthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type RString(RStringSEXP);
    Rcpp::traits::input_parameter< long >::type depth(depthSEXP);
    rcpp_result_gen = Rcpp::wrap(c_limiteddtouC(RString, depth));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dtou_c_dtou", (DL_FUNC) &_dtou_c_dtou, 1},
    {"_dtou_c_limiteddtou", (DL_FUNC) &_dtou_c_limiteddtou, 2},
    {"_dtou_c_dtouC", (DL_FUNC) &_dtou_c_dtouC, 1},
    {"_dtou_c_limiteddtouC", (DL_FUNC) &_dtou_c_limiteddtouC, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_dtou(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
